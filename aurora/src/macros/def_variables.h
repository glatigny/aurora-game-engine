/* Defines all helper statements. */

#define OBJECT_PROPERTIES
#define PROPERTY_FILE(propertyName)
#define PROPERTY_CHAR(propertyName)
#define PROPERTY_XML(propertyName)
#define PROPERTY_INT(propertyName)
#define PROPERTY_INT_PERCENT(propertyName)
#define PROPERTY_BOOL(propertyName)
#define PROPERTY_POINT(propertyName)
#define PROPERTY_POINT_PERCENT(propertyName)
#define PROPERTY_COORD(propertyName)
#define PROPERTY_DUR(propertyName)
#define PROPERTY_RECT(propertyName)
#define PROPERTY_EFFECTS(propertyName)
#define PROPERTY_INTERPOLATIONS(propertyName)
#define PROPERTY_OBJ(subObjClass, propertyName)
#define PROPERTY_MOLD(propertyName)
#define PROPERTY_BITMASK(propertyName, defaultValue)
#define PUBLIC_PROPERTY_FILE(propertyName, getter, setter) PROPERTY_FILE(propertyName)
#define PUBLIC_PROPERTY_CHAR(propertyName, getter, setter) PROPERTY_CHAR(propertyName)
#define PUBLIC_PROPERTY_XML(propertyName, getter, setter) PROPERTY_XML(propertyName)
#define PUBLIC_PROPERTY_INT(propertyName, getter, setter) PROPERTY_INT(propertyName)
#define PUBLIC_PROPERTY_INT_PERCENT(propertyName) PROPERTY_INT_PERCENT(propertyName)
#define PUBLIC_PROPERTY_BOOL(propertyName, getter, setter) PROPERTY_BOOL(propertyName)
#define PUBLIC_PROPERTY_POINT(propertyName, getter, setter) PROPERTY_POINT(propertyName)
#define PUBLIC_PROPERTY_POINT_PERCENT(propertyName, getter, setter) PROPERTY_POINT_PERCENT(propertyName)
#define PUBLIC_PROPERTY_RECT(propertyName, getter, setter) PROPERTY_RECT(propertyName)
#define PUBLIC_PROPERTY_EFFECTS(propertyName, getter, setter) PROPERTY_EFFECTS(propertyName)
#define PUBLIC_PROPERTY_INTERPOLATIONS(propertyName, getter, setter) PROPERTY_INTERPOLATIONS(propertyName)
#define PUBLIC_PROPERTY_OBJ(subObjClass, propertyName, getter, setter) PROPERTY_OBJ(subObjClass, propertyName)
#define PUBLIC_PROPERTY_MOLD(propertyName, getter, setter) PROPERTY_OBJ(propertyName)
#define FACTORY_CONSTRUCTOR(constructorParams)
#define COLLECTION(propertyName, subObjClass, addFunction)
#define MAP(propertyName, subObjClass, addFunction)
#define MOLDMAP(propertyName, addFunction)
#define INTMAP(propertyName, propertyKeys, addFunction)
#define CHARMAP(propertyName, propertyKeys, addFunction)
#define XMLTAGLIST(propertyName, addFunction)
#define END_OBJECT_PROPERTIES
#define SELF_REGISTRATION
#define REGISTER_FUNCTIONS
#define REGISTER_SUPERCLASS(superclass)
#define REGISTER_FUNCTION(f, p)
#define REGISTER_BLOCKING_FUNCTION(f, p)
#define REGISTER_WAIT_FUNCTION(f, p)
#define REGISTER_STATIC_FUNCTION(f, p)
#define REGISTER_STATIC_BLOCKING_FUNCTION(f, p)
#define REGISTER_STATIC_WAIT_FUNCTION(f, p)
#define END_REGISTER_FUNCTIONS
#define INSTANCE_OF
#define SUPERCLASS(name)
#define END_INSTANCE_OF
#define SCRIPTABLE_FUNCTION(name, fparams)
#define SCRIPTABLE_FUNCTION_WAIT(name, fparams)
#define SCRIPTABLE_FUNCTION_BLOCK(name, fparams)
#define SCRIPTABLE_FUNCTION_STR(name, fparams)
#define SCRIPTABLE_FUNCTION_VOID(name, fparams)
#define SCRIPTABLE_FUNCTION_OBJ(name, fparams)
#define SCRIPTABLE_FUNCTION_TRANS(name, fparams)
#define SCRIPTABLE_FUNCTION_RESIZABLE(name, fparams)
#define SCRIPTABLE_FUNCTION_FILE(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_WAIT(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_BLOCK(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_STR(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_VOID(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_OBJ(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_TRANS(name, fparams)
#define SCRIPTABLE_GLOBAL_FUNCTION_RESIZABLE(name, fparams)
#define S_INT(v)
#define S_STR(v)
#define S_PAIR(v)
#define S_TRANS_PTR(v)
#define S_COORD(v)
#define S_DUR(v)
#define S_BOOL(v)
#define S_HTBL(v)
#define S_OBJ(v)
#define S_OBJ_CLASS(v, c)
#define S_MOLD(v)
#define S_PTR_INT(v)
#define S_SIGNAL_ID(v)
#define S_PACK(v)
#define S_FILE(v)
#define S_DIR(v)
#define S_TBL(v)
#define S_XML(v)
#define CUSTOM_EFFECT(eName, eID, eDefault, eTypes, eAccumulate)
